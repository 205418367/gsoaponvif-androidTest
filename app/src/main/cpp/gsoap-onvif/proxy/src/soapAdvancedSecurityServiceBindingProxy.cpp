/* soapAdvancedSecurityServiceBindingProxy.cpp
   Generated by gSOAP 2.8.17r from onvif.h

Copyright(C) 2000-2013, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#include "soapAdvancedSecurityServiceBindingProxy.h"

AdvancedSecurityServiceBindingProxy::AdvancedSecurityServiceBindingProxy()
{	this->soap = soap_new();
	this->own = true;
	AdvancedSecurityServiceBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

AdvancedSecurityServiceBindingProxy::AdvancedSecurityServiceBindingProxy(struct soap *_soap)
{	this->soap = _soap;
	this->own = false;
	AdvancedSecurityServiceBindingProxy_init(_soap->imode, _soap->omode);
}

AdvancedSecurityServiceBindingProxy::AdvancedSecurityServiceBindingProxy(const char *url)
{	this->soap = soap_new();
	this->own = true;
	AdvancedSecurityServiceBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
	soap_endpoint = url;
}

AdvancedSecurityServiceBindingProxy::AdvancedSecurityServiceBindingProxy(soap_mode iomode)
{	this->soap = soap_new();
	this->own = true;
	AdvancedSecurityServiceBindingProxy_init(iomode, iomode);
}

AdvancedSecurityServiceBindingProxy::AdvancedSecurityServiceBindingProxy(const char *url, soap_mode iomode)
{	this->soap = soap_new();
	this->own = true;
	AdvancedSecurityServiceBindingProxy_init(iomode, iomode);
	soap_endpoint = url;
}

AdvancedSecurityServiceBindingProxy::AdvancedSecurityServiceBindingProxy(soap_mode imode, soap_mode omode)
{	this->soap = soap_new();
	this->own = true;
	AdvancedSecurityServiceBindingProxy_init(imode, omode);
}

AdvancedSecurityServiceBindingProxy::~AdvancedSecurityServiceBindingProxy()
{	if (this->own)
		soap_free(this->soap);
}

void AdvancedSecurityServiceBindingProxy::AdvancedSecurityServiceBindingProxy_init(soap_mode imode, soap_mode omode)
{	soap_imode(this->soap, imode);
	soap_omode(this->soap, omode);
	soap_endpoint = NULL;
	static const struct Namespace namespaces[] =
{
	{"SOAP-ENV", "http://www.w3.org/2003/05/soap-envelope", "http://schemas.xmlsoap.org/soap/envelope/", NULL},
	{"SOAP-ENC", "http://www.w3.org/2003/05/soap-encoding", "http://schemas.xmlsoap.org/soap/encoding/", NULL},
	{"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
	{"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
	{"wsa", "http://schemas.xmlsoap.org/ws/2004/08/addressing", NULL, NULL},
	{"wsdd", "http://schemas.xmlsoap.org/ws/2005/04/discovery", NULL, NULL},
	{"chan", "http://schemas.microsoft.com/ws/2005/02/duplex", NULL, NULL},
	{"wsa5", "http://www.w3.org/2005/08/addressing", "http://schemas.xmlsoap.org/ws/2004/08/addressing", NULL},
	{"netrm", "http://schemas.microsoft.com/ws/2006/05/rm", NULL, NULL},
	{"wsrm", "http://docs.oasis-open.org/ws-rx/wsrm/200702", NULL, NULL},
	{"c14n", "http://www.w3.org/2001/10/xml-exc-c14n#", NULL, NULL},
	{"wsu", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd", NULL, NULL},
	{"xenc", "http://www.w3.org/2001/04/xmlenc#", NULL, NULL},
	{"wsc", "http://schemas.xmlsoap.org/ws/2005/02/sc", NULL, NULL},
	{"ds", "http://www.w3.org/2000/09/xmldsig#", NULL, NULL},
	{"wsse", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd", "http://docs.oasis-open.org/wss/oasis-wss-wssecurity-secext-1.1.xsd", NULL},
	{"xmime", "http://tempuri.org/xmime.xsd", NULL, NULL},
	{"xop", "http://www.w3.org/2004/08/xop/include", NULL, NULL},
	{"tt", "http://www.onvif.org/ver10/schema", NULL, NULL},
	{"wsrfbf", "http://docs.oasis-open.org/wsrf/bf-2", NULL, NULL},
	{"wstop", "http://docs.oasis-open.org/wsn/t-1", NULL, NULL},
	{"wsrfr", "http://docs.oasis-open.org/wsrf/r-2", NULL, NULL},
	{"ns1", "http://www.onvif.org/ver10/advancedsecurity/wsdl", NULL, NULL},
	{"tdn", "http://www.onvif.org/ver10/network/wsdl", NULL, NULL},
	{"tds", "http://www.onvif.org/ver10/device/wsdl", NULL, NULL},
	{"tev", "http://www.onvif.org/ver10/events/wsdl", NULL, NULL},
	{"wsnt", "http://docs.oasis-open.org/wsn/b-2", NULL, NULL},
	{"timg", "http://www.onvif.org/ver20/imaging/wsdl", NULL, NULL},
	{"tmd", "http://www.onvif.org/ver10/deviceIO/wsdl", NULL, NULL},
	{"tptz", "http://www.onvif.org/ver20/ptz/wsdl", NULL, NULL},
	{"trt", "http://www.onvif.org/ver10/media/wsdl", NULL, NULL},
	{NULL, NULL, NULL, NULL}
};
	soap_set_namespaces(this->soap, namespaces);
}

void AdvancedSecurityServiceBindingProxy::destroy()
{	soap_destroy(this->soap);
	soap_end(this->soap);
}

void AdvancedSecurityServiceBindingProxy::reset()
{	destroy();
	soap_done(this->soap);
	soap_initialize(this->soap);
	AdvancedSecurityServiceBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

void AdvancedSecurityServiceBindingProxy::soap_noheader()
{	this->soap->header = NULL;
}

void AdvancedSecurityServiceBindingProxy::soap_header(char *wsa__MessageID, struct wsa__Relationship *wsa__RelatesTo, struct wsa__EndpointReferenceType *wsa__From, struct wsa__EndpointReferenceType *wsa__ReplyTo, struct wsa__EndpointReferenceType *wsa__FaultTo, char *wsa__To, char *wsa__Action, struct wsdd__AppSequenceType *wsdd__AppSequence, char *wsa5__MessageID, struct wsa5__RelatesToType *wsa5__RelatesTo, struct wsa5__EndpointReferenceType *wsa5__From, struct wsa5__EndpointReferenceType *wsa5__ReplyTo, struct wsa5__EndpointReferenceType *wsa5__FaultTo, char *wsa5__To, char *wsa5__Action, struct chan__ChannelInstanceType *chan__ChannelInstance, struct wsrm__SequenceType *wsrm__Sequence, int __sizeAckRequested, struct wsrm__AckRequestedType *wsrm__AckRequested, int __sizeSequenceAcknowledgement, struct _wsrm__SequenceAcknowledgement *wsrm__SequenceAcknowledgement, struct wsrm__SequenceFaultType *wsrm__SequenceFault, struct _wsse__Security *wsse__Security)
{	::soap_header(this->soap);
	this->soap->header->wsa__MessageID = wsa__MessageID;
	this->soap->header->wsa__RelatesTo = wsa__RelatesTo;
	this->soap->header->wsa__From = wsa__From;
	this->soap->header->wsa__ReplyTo = wsa__ReplyTo;
	this->soap->header->wsa__FaultTo = wsa__FaultTo;
	this->soap->header->wsa__To = wsa__To;
	this->soap->header->wsa__Action = wsa__Action;
	this->soap->header->wsdd__AppSequence = wsdd__AppSequence;
	this->soap->header->wsa5__MessageID = wsa5__MessageID;
	this->soap->header->wsa5__RelatesTo = wsa5__RelatesTo;
	this->soap->header->wsa5__From = wsa5__From;
	this->soap->header->wsa5__ReplyTo = wsa5__ReplyTo;
	this->soap->header->wsa5__FaultTo = wsa5__FaultTo;
	this->soap->header->wsa5__To = wsa5__To;
	this->soap->header->wsa5__Action = wsa5__Action;
	this->soap->header->chan__ChannelInstance = chan__ChannelInstance;
	this->soap->header->wsrm__Sequence = wsrm__Sequence;
	this->soap->header->__sizeAckRequested = __sizeAckRequested;
	this->soap->header->wsrm__AckRequested = wsrm__AckRequested;
	this->soap->header->__sizeSequenceAcknowledgement = __sizeSequenceAcknowledgement;
	this->soap->header->wsrm__SequenceAcknowledgement = wsrm__SequenceAcknowledgement;
	this->soap->header->wsrm__SequenceFault = wsrm__SequenceFault;
	this->soap->header->wsse__Security = wsse__Security;
}

const SOAP_ENV__Header *AdvancedSecurityServiceBindingProxy::soap_header()
{	return this->soap->header;
}

const SOAP_ENV__Fault *AdvancedSecurityServiceBindingProxy::soap_fault()
{	return this->soap->fault;
}

const char *AdvancedSecurityServiceBindingProxy::soap_fault_string()
{	return *soap_faultstring(this->soap);
}

const char *AdvancedSecurityServiceBindingProxy::soap_fault_detail()
{	return *soap_faultdetail(this->soap);
}

int AdvancedSecurityServiceBindingProxy::soap_close_socket()
{	return soap_closesock(this->soap);
}

int AdvancedSecurityServiceBindingProxy::soap_force_close_socket()
{	return soap_force_closesock(this->soap);
}

void AdvancedSecurityServiceBindingProxy::soap_print_fault(FILE *fd)
{	::soap_print_fault(this->soap, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void AdvancedSecurityServiceBindingProxy::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this->soap, os);
}
#endif

char *AdvancedSecurityServiceBindingProxy::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this->soap, buf, len);
}
#endif

int AdvancedSecurityServiceBindingProxy::GetServiceCapabilities(const char *endpoint, const char *soap_action, _ns1__GetServiceCapabilities *ns1__GetServiceCapabilities, _ns1__GetServiceCapabilitiesResponse *ns1__GetServiceCapabilitiesResponse)
{	struct soap *soap = this->soap;
	struct __ns1__GetServiceCapabilities soap_tmp___ns1__GetServiceCapabilities;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetServiceCapabilities";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetServiceCapabilities.ns1__GetServiceCapabilities = ns1__GetServiceCapabilities;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns1__GetServiceCapabilities(soap, &soap_tmp___ns1__GetServiceCapabilities);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetServiceCapabilities(soap, &soap_tmp___ns1__GetServiceCapabilities, "-ns1:GetServiceCapabilities", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetServiceCapabilities(soap, &soap_tmp___ns1__GetServiceCapabilities, "-ns1:GetServiceCapabilities", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__GetServiceCapabilitiesResponse)
		return soap_closesock(soap);
	ns1__GetServiceCapabilitiesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetServiceCapabilitiesResponse->soap_get(soap, "ns1:GetServiceCapabilitiesResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::CreateRSAKeyPair(const char *endpoint, const char *soap_action, _ns1__CreateRSAKeyPair *ns1__CreateRSAKeyPair, _ns1__CreateRSAKeyPairResponse *ns1__CreateRSAKeyPairResponse)
{	struct soap *soap = this->soap;
	struct __ns1__CreateRSAKeyPair soap_tmp___ns1__CreateRSAKeyPair;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/CreateRSAKeyPair";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__CreateRSAKeyPair.ns1__CreateRSAKeyPair = ns1__CreateRSAKeyPair;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns1__CreateRSAKeyPair(soap, &soap_tmp___ns1__CreateRSAKeyPair);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__CreateRSAKeyPair(soap, &soap_tmp___ns1__CreateRSAKeyPair, "-ns1:CreateRSAKeyPair", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__CreateRSAKeyPair(soap, &soap_tmp___ns1__CreateRSAKeyPair, "-ns1:CreateRSAKeyPair", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__CreateRSAKeyPairResponse)
		return soap_closesock(soap);
	ns1__CreateRSAKeyPairResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__CreateRSAKeyPairResponse->soap_get(soap, "ns1:CreateRSAKeyPairResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::GetKeyStatus(const char *endpoint, const char *soap_action, _ns1__GetKeyStatus *ns1__GetKeyStatus, _ns1__GetKeyStatusResponse *ns1__GetKeyStatusResponse)
{	struct soap *soap = this->soap;
	struct __ns1__GetKeyStatus soap_tmp___ns1__GetKeyStatus;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetKeyStatus";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetKeyStatus.ns1__GetKeyStatus = ns1__GetKeyStatus;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns1__GetKeyStatus(soap, &soap_tmp___ns1__GetKeyStatus);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetKeyStatus(soap, &soap_tmp___ns1__GetKeyStatus, "-ns1:GetKeyStatus", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetKeyStatus(soap, &soap_tmp___ns1__GetKeyStatus, "-ns1:GetKeyStatus", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__GetKeyStatusResponse)
		return soap_closesock(soap);
	ns1__GetKeyStatusResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetKeyStatusResponse->soap_get(soap, "ns1:GetKeyStatusResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::GetPrivateKeyStatus(const char *endpoint, const char *soap_action, _ns1__GetPrivateKeyStatus *ns1__GetPrivateKeyStatus, _ns1__GetPrivateKeyStatusResponse *ns1__GetPrivateKeyStatusResponse)
{	struct soap *soap = this->soap;
	struct __ns1__GetPrivateKeyStatus soap_tmp___ns1__GetPrivateKeyStatus;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetPrivateKeyStatus";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetPrivateKeyStatus.ns1__GetPrivateKeyStatus = ns1__GetPrivateKeyStatus;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns1__GetPrivateKeyStatus(soap, &soap_tmp___ns1__GetPrivateKeyStatus);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetPrivateKeyStatus(soap, &soap_tmp___ns1__GetPrivateKeyStatus, "-ns1:GetPrivateKeyStatus", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetPrivateKeyStatus(soap, &soap_tmp___ns1__GetPrivateKeyStatus, "-ns1:GetPrivateKeyStatus", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__GetPrivateKeyStatusResponse)
		return soap_closesock(soap);
	ns1__GetPrivateKeyStatusResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetPrivateKeyStatusResponse->soap_get(soap, "ns1:GetPrivateKeyStatusResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::GetAllKeys(const char *endpoint, const char *soap_action, _ns1__GetAllKeys *ns1__GetAllKeys, _ns1__GetAllKeysResponse *ns1__GetAllKeysResponse)
{	struct soap *soap = this->soap;
	struct __ns1__GetAllKeys soap_tmp___ns1__GetAllKeys;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetAllKeys";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetAllKeys.ns1__GetAllKeys = ns1__GetAllKeys;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns1__GetAllKeys(soap, &soap_tmp___ns1__GetAllKeys);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetAllKeys(soap, &soap_tmp___ns1__GetAllKeys, "-ns1:GetAllKeys", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetAllKeys(soap, &soap_tmp___ns1__GetAllKeys, "-ns1:GetAllKeys", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__GetAllKeysResponse)
		return soap_closesock(soap);
	ns1__GetAllKeysResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetAllKeysResponse->soap_get(soap, "ns1:GetAllKeysResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::DeleteKey(const char *endpoint, const char *soap_action, _ns1__DeleteKey *ns1__DeleteKey, _ns1__DeleteKeyResponse *ns1__DeleteKeyResponse)
{	struct soap *soap = this->soap;
	struct __ns1__DeleteKey soap_tmp___ns1__DeleteKey;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/DeleteKey";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__DeleteKey.ns1__DeleteKey = ns1__DeleteKey;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns1__DeleteKey(soap, &soap_tmp___ns1__DeleteKey);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__DeleteKey(soap, &soap_tmp___ns1__DeleteKey, "-ns1:DeleteKey", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__DeleteKey(soap, &soap_tmp___ns1__DeleteKey, "-ns1:DeleteKey", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__DeleteKeyResponse)
		return soap_closesock(soap);
	ns1__DeleteKeyResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__DeleteKeyResponse->soap_get(soap, "ns1:DeleteKeyResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::CreatePKCS10CSR(const char *endpoint, const char *soap_action, _ns1__CreatePKCS10CSR *ns1__CreatePKCS10CSR, _ns1__CreatePKCS10CSRResponse *ns1__CreatePKCS10CSRResponse)
{	struct soap *soap = this->soap;
	struct __ns1__CreatePKCS10CSR soap_tmp___ns1__CreatePKCS10CSR;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/CreatePKCS10CSR";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__CreatePKCS10CSR.ns1__CreatePKCS10CSR = ns1__CreatePKCS10CSR;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns1__CreatePKCS10CSR(soap, &soap_tmp___ns1__CreatePKCS10CSR);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__CreatePKCS10CSR(soap, &soap_tmp___ns1__CreatePKCS10CSR, "-ns1:CreatePKCS10CSR", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__CreatePKCS10CSR(soap, &soap_tmp___ns1__CreatePKCS10CSR, "-ns1:CreatePKCS10CSR", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__CreatePKCS10CSRResponse)
		return soap_closesock(soap);
	ns1__CreatePKCS10CSRResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__CreatePKCS10CSRResponse->soap_get(soap, "ns1:CreatePKCS10CSRResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::CreateSelfSignedCertificate(const char *endpoint, const char *soap_action, _ns1__CreateSelfSignedCertificate *ns1__CreateSelfSignedCertificate, _ns1__CreateSelfSignedCertificateResponse *ns1__CreateSelfSignedCertificateResponse)
{	struct soap *soap = this->soap;
	struct __ns1__CreateSelfSignedCertificate soap_tmp___ns1__CreateSelfSignedCertificate;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/CreateSelfSignedCertificate";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__CreateSelfSignedCertificate.ns1__CreateSelfSignedCertificate = ns1__CreateSelfSignedCertificate;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns1__CreateSelfSignedCertificate(soap, &soap_tmp___ns1__CreateSelfSignedCertificate);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__CreateSelfSignedCertificate(soap, &soap_tmp___ns1__CreateSelfSignedCertificate, "-ns1:CreateSelfSignedCertificate", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__CreateSelfSignedCertificate(soap, &soap_tmp___ns1__CreateSelfSignedCertificate, "-ns1:CreateSelfSignedCertificate", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__CreateSelfSignedCertificateResponse)
		return soap_closesock(soap);
	ns1__CreateSelfSignedCertificateResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__CreateSelfSignedCertificateResponse->soap_get(soap, "ns1:CreateSelfSignedCertificateResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::UploadCertificate(const char *endpoint, const char *soap_action, _ns1__UploadCertificate *ns1__UploadCertificate, _ns1__UploadCertificateResponse *ns1__UploadCertificateResponse)
{	struct soap *soap = this->soap;
	struct __ns1__UploadCertificate soap_tmp___ns1__UploadCertificate;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/UploadCertificate";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__UploadCertificate.ns1__UploadCertificate = ns1__UploadCertificate;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns1__UploadCertificate(soap, &soap_tmp___ns1__UploadCertificate);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__UploadCertificate(soap, &soap_tmp___ns1__UploadCertificate, "-ns1:UploadCertificate", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__UploadCertificate(soap, &soap_tmp___ns1__UploadCertificate, "-ns1:UploadCertificate", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__UploadCertificateResponse)
		return soap_closesock(soap);
	ns1__UploadCertificateResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__UploadCertificateResponse->soap_get(soap, "ns1:UploadCertificateResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::GetCertificate(const char *endpoint, const char *soap_action, _ns1__GetCertificate *ns1__GetCertificate, _ns1__GetCertificateResponse *ns1__GetCertificateResponse)
{	struct soap *soap = this->soap;
	struct __ns1__GetCertificate soap_tmp___ns1__GetCertificate;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetCertificate";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetCertificate.ns1__GetCertificate = ns1__GetCertificate;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns1__GetCertificate(soap, &soap_tmp___ns1__GetCertificate);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetCertificate(soap, &soap_tmp___ns1__GetCertificate, "-ns1:GetCertificate", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetCertificate(soap, &soap_tmp___ns1__GetCertificate, "-ns1:GetCertificate", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__GetCertificateResponse)
		return soap_closesock(soap);
	ns1__GetCertificateResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetCertificateResponse->soap_get(soap, "ns1:GetCertificateResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::GetAllCertificates(const char *endpoint, const char *soap_action, _ns1__GetAllCertificates *ns1__GetAllCertificates, _ns1__GetAllCertificatesResponse *ns1__GetAllCertificatesResponse)
{	struct soap *soap = this->soap;
	struct __ns1__GetAllCertificates soap_tmp___ns1__GetAllCertificates;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetAllCertificates";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetAllCertificates.ns1__GetAllCertificates = ns1__GetAllCertificates;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns1__GetAllCertificates(soap, &soap_tmp___ns1__GetAllCertificates);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetAllCertificates(soap, &soap_tmp___ns1__GetAllCertificates, "-ns1:GetAllCertificates", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetAllCertificates(soap, &soap_tmp___ns1__GetAllCertificates, "-ns1:GetAllCertificates", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__GetAllCertificatesResponse)
		return soap_closesock(soap);
	ns1__GetAllCertificatesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetAllCertificatesResponse->soap_get(soap, "ns1:GetAllCertificatesResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::DeleteCertificate(const char *endpoint, const char *soap_action, _ns1__DeleteCertificate *ns1__DeleteCertificate, _ns1__DeleteCertificateResponse *ns1__DeleteCertificateResponse)
{	struct soap *soap = this->soap;
	struct __ns1__DeleteCertificate soap_tmp___ns1__DeleteCertificate;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/DeleteCertificate";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__DeleteCertificate.ns1__DeleteCertificate = ns1__DeleteCertificate;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns1__DeleteCertificate(soap, &soap_tmp___ns1__DeleteCertificate);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__DeleteCertificate(soap, &soap_tmp___ns1__DeleteCertificate, "-ns1:DeleteCertificate", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__DeleteCertificate(soap, &soap_tmp___ns1__DeleteCertificate, "-ns1:DeleteCertificate", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__DeleteCertificateResponse)
		return soap_closesock(soap);
	ns1__DeleteCertificateResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__DeleteCertificateResponse->soap_get(soap, "ns1:DeleteCertificateResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::CreateCertificationPath(const char *endpoint, const char *soap_action, _ns1__CreateCertificationPath *ns1__CreateCertificationPath, _ns1__CreateCertificationPathResponse *ns1__CreateCertificationPathResponse)
{	struct soap *soap = this->soap;
	struct __ns1__CreateCertificationPath soap_tmp___ns1__CreateCertificationPath;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/CreateCertificationPath";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__CreateCertificationPath.ns1__CreateCertificationPath = ns1__CreateCertificationPath;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns1__CreateCertificationPath(soap, &soap_tmp___ns1__CreateCertificationPath);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__CreateCertificationPath(soap, &soap_tmp___ns1__CreateCertificationPath, "-ns1:CreateCertificationPath", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__CreateCertificationPath(soap, &soap_tmp___ns1__CreateCertificationPath, "-ns1:CreateCertificationPath", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__CreateCertificationPathResponse)
		return soap_closesock(soap);
	ns1__CreateCertificationPathResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__CreateCertificationPathResponse->soap_get(soap, "ns1:CreateCertificationPathResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::GetCertificationPath(const char *endpoint, const char *soap_action, _ns1__GetCertificationPath *ns1__GetCertificationPath, _ns1__GetCertificationPathResponse *ns1__GetCertificationPathResponse)
{	struct soap *soap = this->soap;
	struct __ns1__GetCertificationPath soap_tmp___ns1__GetCertificationPath;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetCertificationPath";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetCertificationPath.ns1__GetCertificationPath = ns1__GetCertificationPath;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns1__GetCertificationPath(soap, &soap_tmp___ns1__GetCertificationPath);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetCertificationPath(soap, &soap_tmp___ns1__GetCertificationPath, "-ns1:GetCertificationPath", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetCertificationPath(soap, &soap_tmp___ns1__GetCertificationPath, "-ns1:GetCertificationPath", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__GetCertificationPathResponse)
		return soap_closesock(soap);
	ns1__GetCertificationPathResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetCertificationPathResponse->soap_get(soap, "ns1:GetCertificationPathResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::GetAllCertificationPaths(const char *endpoint, const char *soap_action, _ns1__GetAllCertificationPaths *ns1__GetAllCertificationPaths, _ns1__GetAllCertificationPathsResponse *ns1__GetAllCertificationPathsResponse)
{	struct soap *soap = this->soap;
	struct __ns1__GetAllCertificationPaths soap_tmp___ns1__GetAllCertificationPaths;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetAllCertificationPaths";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetAllCertificationPaths.ns1__GetAllCertificationPaths = ns1__GetAllCertificationPaths;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns1__GetAllCertificationPaths(soap, &soap_tmp___ns1__GetAllCertificationPaths);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetAllCertificationPaths(soap, &soap_tmp___ns1__GetAllCertificationPaths, "-ns1:GetAllCertificationPaths", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetAllCertificationPaths(soap, &soap_tmp___ns1__GetAllCertificationPaths, "-ns1:GetAllCertificationPaths", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__GetAllCertificationPathsResponse)
		return soap_closesock(soap);
	ns1__GetAllCertificationPathsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetAllCertificationPathsResponse->soap_get(soap, "ns1:GetAllCertificationPathsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::DeleteCertificationPath(const char *endpoint, const char *soap_action, _ns1__DeleteCertificationPath *ns1__DeleteCertificationPath, _ns1__DeleteCertificationPathResponse *ns1__DeleteCertificationPathResponse)
{	struct soap *soap = this->soap;
	struct __ns1__DeleteCertificationPath soap_tmp___ns1__DeleteCertificationPath;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/DeleteCertificationPath";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__DeleteCertificationPath.ns1__DeleteCertificationPath = ns1__DeleteCertificationPath;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns1__DeleteCertificationPath(soap, &soap_tmp___ns1__DeleteCertificationPath);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__DeleteCertificationPath(soap, &soap_tmp___ns1__DeleteCertificationPath, "-ns1:DeleteCertificationPath", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__DeleteCertificationPath(soap, &soap_tmp___ns1__DeleteCertificationPath, "-ns1:DeleteCertificationPath", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__DeleteCertificationPathResponse)
		return soap_closesock(soap);
	ns1__DeleteCertificationPathResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__DeleteCertificationPathResponse->soap_get(soap, "ns1:DeleteCertificationPathResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::AddServerCertificateAssignment(const char *endpoint, const char *soap_action, _ns1__AddServerCertificateAssignment *ns1__AddServerCertificateAssignment, _ns1__AddServerCertificateAssignmentResponse *ns1__AddServerCertificateAssignmentResponse)
{	struct soap *soap = this->soap;
	struct __ns1__AddServerCertificateAssignment soap_tmp___ns1__AddServerCertificateAssignment;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/AddServerCertificateAssignment";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__AddServerCertificateAssignment.ns1__AddServerCertificateAssignment = ns1__AddServerCertificateAssignment;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns1__AddServerCertificateAssignment(soap, &soap_tmp___ns1__AddServerCertificateAssignment);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__AddServerCertificateAssignment(soap, &soap_tmp___ns1__AddServerCertificateAssignment, "-ns1:AddServerCertificateAssignment", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__AddServerCertificateAssignment(soap, &soap_tmp___ns1__AddServerCertificateAssignment, "-ns1:AddServerCertificateAssignment", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__AddServerCertificateAssignmentResponse)
		return soap_closesock(soap);
	ns1__AddServerCertificateAssignmentResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__AddServerCertificateAssignmentResponse->soap_get(soap, "ns1:AddServerCertificateAssignmentResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::RemoveServerCertificateAssignment(const char *endpoint, const char *soap_action, _ns1__RemoveServerCertificateAssignment *ns1__RemoveServerCertificateAssignment, _ns1__RemoveServerCertificateAssignmentResponse *ns1__RemoveServerCertificateAssignmentResponse)
{	struct soap *soap = this->soap;
	struct __ns1__RemoveServerCertificateAssignment soap_tmp___ns1__RemoveServerCertificateAssignment;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/RemoveServerCertificateAssignment";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__RemoveServerCertificateAssignment.ns1__RemoveServerCertificateAssignment = ns1__RemoveServerCertificateAssignment;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns1__RemoveServerCertificateAssignment(soap, &soap_tmp___ns1__RemoveServerCertificateAssignment);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__RemoveServerCertificateAssignment(soap, &soap_tmp___ns1__RemoveServerCertificateAssignment, "-ns1:RemoveServerCertificateAssignment", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__RemoveServerCertificateAssignment(soap, &soap_tmp___ns1__RemoveServerCertificateAssignment, "-ns1:RemoveServerCertificateAssignment", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__RemoveServerCertificateAssignmentResponse)
		return soap_closesock(soap);
	ns1__RemoveServerCertificateAssignmentResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__RemoveServerCertificateAssignmentResponse->soap_get(soap, "ns1:RemoveServerCertificateAssignmentResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::ReplaceServerCertificateAssignment(const char *endpoint, const char *soap_action, _ns1__ReplaceServerCertificateAssignment *ns1__ReplaceServerCertificateAssignment, _ns1__ReplaceServerCertificateAssignmentResponse *ns1__ReplaceServerCertificateAssignmentResponse)
{	struct soap *soap = this->soap;
	struct __ns1__ReplaceServerCertificateAssignment soap_tmp___ns1__ReplaceServerCertificateAssignment;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/ReplaceServerCertificateAssignment";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__ReplaceServerCertificateAssignment.ns1__ReplaceServerCertificateAssignment = ns1__ReplaceServerCertificateAssignment;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns1__ReplaceServerCertificateAssignment(soap, &soap_tmp___ns1__ReplaceServerCertificateAssignment);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__ReplaceServerCertificateAssignment(soap, &soap_tmp___ns1__ReplaceServerCertificateAssignment, "-ns1:ReplaceServerCertificateAssignment", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__ReplaceServerCertificateAssignment(soap, &soap_tmp___ns1__ReplaceServerCertificateAssignment, "-ns1:ReplaceServerCertificateAssignment", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__ReplaceServerCertificateAssignmentResponse)
		return soap_closesock(soap);
	ns1__ReplaceServerCertificateAssignmentResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__ReplaceServerCertificateAssignmentResponse->soap_get(soap, "ns1:ReplaceServerCertificateAssignmentResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::GetAssignedServerCertificates(const char *endpoint, const char *soap_action, _ns1__GetAssignedServerCertificates *ns1__GetAssignedServerCertificates, _ns1__GetAssignedServerCertificatesResponse *ns1__GetAssignedServerCertificatesResponse)
{	struct soap *soap = this->soap;
	struct __ns1__GetAssignedServerCertificates soap_tmp___ns1__GetAssignedServerCertificates;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetAssignedServerCertificates";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetAssignedServerCertificates.ns1__GetAssignedServerCertificates = ns1__GetAssignedServerCertificates;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns1__GetAssignedServerCertificates(soap, &soap_tmp___ns1__GetAssignedServerCertificates);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetAssignedServerCertificates(soap, &soap_tmp___ns1__GetAssignedServerCertificates, "-ns1:GetAssignedServerCertificates", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetAssignedServerCertificates(soap, &soap_tmp___ns1__GetAssignedServerCertificates, "-ns1:GetAssignedServerCertificates", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__GetAssignedServerCertificatesResponse)
		return soap_closesock(soap);
	ns1__GetAssignedServerCertificatesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetAssignedServerCertificatesResponse->soap_get(soap, "ns1:GetAssignedServerCertificatesResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
/* End of client proxy code */
